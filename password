#Here's an advanced random password generator with a GUI using Tkinter, incorporating various features like password complexity, clipboard integration, and security rules:

import tkinter as tk
from tkinter import messagebox
import random
import string


def generate_password():
    length = int(length_entry.get())
    include_uppercase = uppercase_var.get()
    include_numbers = numbers_var.get()
    include_symbols = symbols_var.get()

    if length <= 0:
        messagebox.showerror("Error", "Password length must be greater than 0.")
        return

    character_pool = string.ascii_lowercase  # Always include lowercase letters
    if include_uppercase:
        character_pool += string.ascii_uppercase
    if include_numbers:
        character_pool += string.digits
    if include_symbols:
        character_pool += string.punctuation

    password = ''.join(random.choice(character_pool) for _ in range(length))
    
    password_entry.delete(0, tk.END)
    password_entry.insert(0, password)

def copy_to_clipboard():
    password=password_entry.get()
    messagebox.showinfo("password", f"Password:{password}")

# GUI setup
root = tk.Tk()
root.title("Advanced Password Generator")
root.geometry("400x300")

# Password length input
length_label = tk.Label(root, text="Password Length:")
length_label.pack(pady=5)
length_entry = tk.Entry(root)
length_entry.pack(pady=5)

# Options for character types
uppercase_var = tk.BooleanVar()
numbers_var = tk.BooleanVar()
symbols_var = tk.BooleanVar()

uppercase_check = tk.Checkbutton(root, text="Include Uppercase", variable=uppercase_var)
uppercase_check.pack(pady=5)
numbers_check = tk.Checkbutton(root, text="Include Numbers", variable=numbers_var)
numbers_check.pack(pady=5)
symbols_check = tk.Checkbutton(root, text="Include Symbols", variable=symbols_var)
symbols_check.pack(pady=5)

# Password display and generation button
password_entry = tk.Entry(root, width=40)
password_entry.pack(pady=10)

generate_button = tk.Button(root, text="Generate Password", command=generate_password)
generate_button.pack(pady=10)

# Copy to clipboard button
copy_button = tk.Button(root, text="Copy to Clipboard", command=copy_to_clipboard)
copy_button.pack(pady=5)

root.mainloop()
